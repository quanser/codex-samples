<?xml version="1.0" encoding="utf-8"?>
<fragment xmlns="http://resources.codexdocs.com/schema/v1/QDocument.xsd">

  <script>
    <![CDATA[
    function drawSquare(series, centre, width, height)
    
    local x = centre[1];
    local y = centre[2];
    series:Add(x - width/2, y + height/2);
    series:Add(x + width/2, y + height/2);
    series:Add(x + width/2, y - height/2);
    series:Add(x - width/2, y - height/2);
    series:Add(x - width/2, y + height/2);
    series:Update();
    end

    function drawArrow(series, start, finish)

    local width = 1;
    local line = finish - start;
    local angle = math.atan2(line[1],line[2]);
    local lineLength = math.sqrt((start[1] - finish[1])^2+(start[2] - finish[2])^2);
    local tPointOnLine;
    local pointOnLine

    tPoint = width / (2 * lineLength);
    pointOnLine = finish - tPoint * line;

    local normal = vector({-line[2],line[1]});
    local leftP = pointOnLine + tPoint * normal;
    local rightP = pointOnLine - tPoint * normal;

    series:Add(start[1],start[2])
    series:Add(finish[1],finish[2])
    series:Add(leftP[1],leftP[2])
    series:Add(finish[1],finish[2])
    series:Add(rightP[1],rightP[2])
    series:Update();
    end
    
    function drawCircle(series, centre, radius)
    local points = radius * 100;
    local delta = (2 * 3.1415 * radius) / points;

    for x = radius, -radius, -delta do
      y = math.sqrt(radius^2 - x^2);
      series:Add(centre[1] + x, centre[2] + y);
    end
    
    for x = -radius, radius, delta do
      y = math.sqrt(radius^2 - x^2);
      series:Add(centre[1] + x, centre[2] - y);
    end
    
    series:Add(centre[1] + radius, centre[2]);
    
    end
    
    function drawArc(series, startAngle, endAngle, centre, radius)
    
      local rad = math.rad;
      
      local seg = 100;
      local delta = rad((endAngle - startAngle)) / seg;
      local theta;
      
      local x = centre[1] + radius * math.cos(rad(startAngle));
      local y = centre[2] + radius * math.sin(rad(startAngle));
      series:Add(x, y);
      
      for theta = rad(startAngle), rad(endAngle), delta do
        x = centre[1] + radius * math.cos(theta);
        y = centre[2] + radius * math.sin(theta);
        series:Add(x, y);
      end
    end
]]>
  </script>

</fragment>